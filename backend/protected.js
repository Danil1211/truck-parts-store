// protected.js
const jwt = require('jsonwebtoken');
const { User } = require('./models');

const SECRET = process.env.JWT_SECRET || 'truck_secret';

// üîê Middleware: –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function authMiddleware(req, res, next) {
  const authHeader = req.headers.authorization;
  if (!authHeader) return res.status(401).json({ error: '–ù–µ—Ç —Ç–æ–∫–µ–Ω–∞' });

  const token = authHeader.split(' ')[1];
  try {
    const decoded = jwt.verify(token, SECRET);

    // ‚ö° –∏—â–µ–º –ø–æ id –∏ tenantId
    const user = await User.findOne({ _id: decoded.id, tenantId: decoded.tenantId });
    if (!user) return res.status(401).json({ error: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω' });

    req.user = user;
    req.tenantId = decoded.tenantId; // üëà —Ç–µ–ø–µ—Ä—å tenantId –¥–æ—Å—Ç—É–ø–µ–Ω –≤ –∫–∞–∂–¥–æ–º —Ä–æ—É—Ç–µ
    next();
  } catch (err) {
    console.error('authMiddleware error:', err);
    return res.status(403).json({ error: '–ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω' });
  }
}

// üëë Middleware: –¥–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞
function adminMiddleware(req, res, next) {
  if (!req.user || !req.user.isAdmin) {
    return res.status(403).json({ error: '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω)' });
  }
  next();
}

module.exports = {
  authMiddleware,
  adminMiddleware
};
