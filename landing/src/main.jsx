// src/App.jsx
import React, { useState } from "react";
import { createRoot } from "react-dom/client";
import "./index.css";

const API = import.meta.env.VITE_API_URL || "";

const PLAN_LABELS = {
  free: "Free ‚Äî —Å—Ç–∞—Ä—Ç",
  basic: "Basic ‚Äî —Ä–∞—Å—Ç—ë–º",
  pro: "Pro ‚Äî –º–∞—Å—à—Ç–∞–±",
};

function App() {
  const [company, setCompany] = useState("");
  const [subdomain, setSubdomain] = useState("");
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [plan, setPlan] = useState("free");

  const [loading, setLoading] = useState(false);
  const [error, setError] = useState("");
  const [hint, setHint] = useState("");

  const onSubmit = async (e) => {
    e.preventDefault();
    setError("");
    setHint("");
    setLoading(true);

    try {
      const res = await fetch(`${API}/api/public/signup`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ company, subdomain, email, password, plan }),
      });

      const data = await res.json();

      if (!res.ok) {
        setError(data?.error || "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞");
        return;
      }

      if (data.loginUrl) {
        window.location.href = data.loginUrl;
        return;
      }

      setHint(
        `–ì–æ—Ç–æ–≤–æ! –í–∞—à –ø–æ–¥–¥–æ–º–µ–Ω: ${data.subdomain}.storo-shop.com. –û—Ç–∫—Ä–æ–π—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞ –º–∞–≥–∞–∑–∏–Ω–∞.`
      );
    } catch {
      setError("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏");
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100">
      {/* HERO */}
      <section className="text-center py-20 px-6">
        <h1 className="text-4xl sm:text-5xl font-bold text-indigo-700 mb-4 animate-fadeIn">
          –ó–∞–ø—É—Å—Ç–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω –∑–∞ 60 —Å–µ–∫—É–Ω–¥
        </h1>
        <p className="text-lg text-gray-600 mb-6 max-w-2xl mx-auto">
          Storo ‚Äî —ç—Ç–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞ –±–µ–∑
          –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞. –ü—Ä–æ—Å—Ç–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è –∏ –Ω–∞—á–Ω–∏ –ø—Ä–æ–¥–∞–≤–∞—Ç—å —É–∂–µ —Å–µ–≥–æ–¥–Ω—è.
        </p>
        <a
          href="#signup"
          className="bg-indigo-600 text-white px-6 py-3 rounded-lg shadow-lg hover:bg-indigo-700 transition"
        >
          –°–æ–∑–¥–∞—Ç—å –º–∞–≥–∞–∑–∏–Ω –±–µ—Å–ø–ª–∞—Ç–Ω–æ
        </a>
      </section>

      {/* –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê */}
      <section className="py-16 bg-white">
        <div className="max-w-6xl mx-auto px-6 grid md:grid-cols-3 gap-8 text-center">
          {[
            { title: "‚ö° –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫", text: "–ì–æ—Ç–æ–≤—ã–π –º–∞–≥–∞–∑–∏–Ω –∑–∞ 1 –º–∏–Ω—É—Ç—É" },
            { title: "üì± –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω", text: "–ê–¥–∞–ø—Ç–∏–≤–Ω–æ –ø–æ–¥ –≤—Å–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞" },
            { title: "üí≥ –ü—Ä–∏—ë–º –ø–ª–∞—Ç–µ–∂–µ–π", text: "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–∞—Ä—Ç –∏ —Å–µ—Ä–≤–∏—Å–æ–≤" },
          ].map((item, i) => (
            <div key={i} className="p-6 rounded-xl shadow-md hover:shadow-xl transition">
              <h3 className="text-xl font-semibold text-indigo-600 mb-2">{item.title}</h3>
              <p className="text-gray-600">{item.text}</p>
            </div>
          ))}
        </div>
      </section>

      {/* –í–û–ó–ú–û–ñ–ù–û–°–¢–ò */}
      <section className="py-20 px-6">
        <h2 className="text-3xl font-bold text-center text-indigo-700 mb-10">
          –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
        </h2>
        <div className="max-w-6xl mx-auto grid md:grid-cols-2 lg:grid-cols-3 gap-8">
          {[
            "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏ –∏ –∑–∞–∫–∞–∑–∞–º–∏",
            "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —á–∞—Ç–∞ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏",
            "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ù–æ–≤–æ–π –ü–æ—á—Ç–æ–π",
            "–ì–∏–±–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–∏–∑–∞–π–Ω–∞",
            "SEO –∏ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ",
            "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –æ—Ç—á—ë—Ç—ã",
          ].map((text, i) => (
            <div
              key={i}
              className="bg-white p-6 rounded-xl shadow-md hover:scale-[1.02] transition"
            >
              <p className="text-gray-700">‚úÖ {text}</p>
            </div>
          ))}
        </div>
      </section>

      {/* –ß–¢–û –ü–û–õ–£–ß–ò–¢ –ö–õ–ò–ï–ù–¢ */}
      <section className="py-16 bg-indigo-50">
        <div className="max-w-5xl mx-auto px-6 text-center">
          <h2 className="text-3xl font-bold text-indigo-700 mb-8">
            –ß—Ç–æ –ø–æ–ª—É—á–∞–µ—à—å –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏?
          </h2>
          <ul className="space-y-4 text-lg text-gray-700">
            <li>üöÄ –ü–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤—ã–π —Å–∞–π—Ç —Å –∫–æ—Ä–∑–∏–Ω–æ–π</li>
            <li>üé® –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω –º–∞–≥–∞–∑–∏–Ω–∞</li>
            <li>
              üîó –õ–∏—á–Ω—ã–π –ø–æ–¥–¥–æ–º–µ–Ω –≤–∏–¥–∞ <b>–≤–∞—à–º–∞–≥–∞–∑–∏–Ω.storo-shop.com</b>
            </li>
            <li>üì¶ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏ –∏ –∑–∞–∫–∞–∑–∞–º–∏</li>
            <li>üí≥ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–Ω–∏–º–∞—Ç—å –æ–Ω–ª–∞–π–Ω-–æ–ø–ª–∞—Ç—ã</li>
          </ul>
        </div>
      </section>

      {/* –§–û–†–ú–ê –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò */}
      <section id="signup" className="py-20 px-6">
        <div className="w-full max-w-xl mx-auto bg-white rounded-2xl shadow-lg p-8">
          <h2 className="text-3xl font-bold text-indigo-600 mb-6">
            –ù–∞—á–Ω–∏ –±–µ—Å–ø–ª–∞—Ç–Ω–æ
          </h2>

          <form onSubmit={onSubmit} className="space-y-4">
            <input
              className="w-full px-4 py-3 border rounded-lg shadow-sm focus:ring-2 focus:ring-indigo-400 outline-none transition"
              placeholder="–ö–æ–º–ø–∞–Ω–∏—è"
              value={company}
              onChange={(e) => setCompany(e.target.value)}
              required
            />

            <div className="flex items-center gap-2">
              <input
                className="flex-1 px-4 py-3 border rounded-lg shadow-sm focus:ring-2 focus:ring-indigo-400 outline-none transition"
                placeholder="–ü–æ–¥–¥–æ–º–µ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä, demo)"
                value={subdomain}
                onChange={(e) => setSubdomain(e.target.value.trim())}
                required
              />
              <span className="text-gray-600">.storo-shop.com</span>
            </div>

            <input
              type="email"
              className="w-full px-4 py-3 border rounded-lg shadow-sm focus:ring-2 focus:ring-indigo-400 outline-none transition"
              placeholder="Email –≤–ª–∞–¥–µ–ª—å—Ü–∞"
              value={email}
              onChange={(e) => setEmail(e.target.value.trim())}
              required
            />

            <input
              type="password"
              className="w-full px-4 py-3 border rounded-lg shadow-sm focus:ring-2 focus:ring-indigo-400 outline-none transition"
              placeholder="–ü–∞—Ä–æ–ª—å"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              required
            />

            <div>
              <label className="block font-medium mb-1">–¢–∞—Ä–∏—Ñ</label>
              <div className="flex gap-4 flex-wrap">
                {["free", "basic", "pro"].map((p) => (
                  <label
                    key={p}
                    className={`flex items-center gap-2 px-3 py-2 border rounded-lg cursor-pointer transition hover:shadow-md ${
                      plan === p ? "border-indigo-500 bg-indigo-50" : "border-gray-300"
                    }`}
                  >
                    <input
                      type="radio"
                      name="plan"
                      value={p}
                      checked={plan === p}
                      onChange={() => setPlan(p)}
                    />
                    {PLAN_LABELS[p]}
                  </label>
                ))}
              </div>
            </div>

            <button
              type="submit"
              disabled={loading}
              className="w-full bg-indigo-600 text-white py-3 rounded-lg shadow-md hover:bg-indigo-700 transition active:scale-[0.98]"
            >
              {loading ? "–°–æ–∑–¥–∞—ë–º..." : "–°–æ–∑–¥–∞—Ç—å –º–∞–≥–∞–∑–∏–Ω"}
            </button>
          </form>

          {error && <p className="text-red-500 mt-4">–û—à–∏–±–∫–∞: {error}</p>}
          {hint && <p className="text-green-600 mt-4">{hint}</p>}
        </div>
      </section>

      {/* FOOTER */}
      <footer className="py-6 text-center text-gray-500 border-t">
        ¬© {new Date().getFullYear()} Storo. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.
      </footer>
    </div>
  );
}

createRoot(document.getElementById("root")).render(<App />);
